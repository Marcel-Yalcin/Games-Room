'''Asks for the user's name, greets them and thengives the user a menu of three games and an option to quit.'''import random### Initial Functions ###def games_room(name):    '''Greets the user and give them a menu of the three games, as    well as an option to quit. If the user enters something else,    it gives them an error messages and docks their points by a     randomly determined amount.'''    points = 0    quit_option = False        print(f"Hello, {name}!") # Greets user        # Main loop    while quit_option == False:        print(f"\nCurrent points: {points}")                # game menu        print("\nOptions: Number Guess | Modified RPSLS | Coin Flips | Quit")        choice = input("Select a game (enter in lowercase): ")                if choice == "number guess":            guess = int(input("Guess a number: "))            points += play_number_guess(guess)        elif choice == "modified rpsls":            move = input("Enter your move: ")            points += play_mrpsls(move)        elif choice == "coin flips":            points += play_coin()        elif choice == "quit":            quit_option = True        # docks the player by a random amount of points if they select a game that's not on the menu        else:            points_lost = random.randint(1,10)            points -= points_lost            print(f"Error: invalid choice | You lost: {points} points")            return points### Functions for Each Game ###def play_number_guess(guess):    '''User guesses a random number. Their points depend on how     close their guess is to the sum of two six-sided dice.        Equal to dice_sum -> 10 pt    Within 2 -> 5 pt    Within 4 -> 2 pt    Else -> 0 pt    '''    dice1 = random.randint(1,6)    dice2 = random.randint(1,6)    dice_sum = dice1 + dice2        # Conditionals for awarding points    if guess == dice_sum:        points = 10    elif guess <= dice_sum + 2 or guess >= dice_sum - 2:         points = 5    elif guess <= dice_sum + 4 or guess >= dice_sum - 4:        points = 2    else:         points = 0             print(f"Number Guess | Dice sum: {dice_sum} | Your guess: {guess} | Your points: {points}")        return points# Helper function for modified RPSLS that converts integer value of move back into a string.def mrpsls_convert(move):    if move == 1:        move = "scissors"    elif move == 2:        move = "paper"    elif move == 3:        move = "rock"    elif move == 4:        move = "spock"    elif move == 5:        move = "lizard"        return move                def play_mrpsls(move):    '''    The player's move will be translated to an integer from 1-5.    This integer n can beat any integer n+1 and n+3. If n+3 exceeds 5, the integers    'loop' back to 1.        By comparing which values the player's move and computer's move can beat,    the winner can be determined.    '''        # Converts user input to integer values    if move == "scissors":         move = 1    if move == "paper":        move = 2    if move == "rock":        move = 3    if move == "spock": # without modification this would be "spock"        move = 4    if move == "lizard": # without modification this would be "lizard"        move = 5    # Generates a random computer move    random_move = random.randint(1,5)        # Determines which values that the user's move can "beat"    if move + 1 > 5:        beaten_move1 = move - 4        beaten_move2 = move - 2    elif move + 3 > 5:        beaten_move1 = move + 1        beaten_move2 = move - 2    else:        beaten_move1 = move + 1        beaten_move2 = move + 3        # Determines which values that the computer's move can "beat"    if random_move + 1 > 5:        random_beaten_move1 = random_move - 4        random_beaten_move2 = random_move - 2    elif random_move + 3 > 5:        random_beaten_move1 = random_move + 1        random_beaten_move2 = random_move - 2    else:        random_beaten_move1 = random_move + 1        random_beaten_move2 = random_move + 3        ### Finds out if the user or computer wins, or if it's a draw ###            # User wins / Computer loses    if random_move == beaten_move1 or random_move == beaten_move2:        points = 10        result = "You won!"    # User loses    elif move == random_beaten_move1 or move == random_beaten_move2:        points = 0        result = "You lost."    # Tie    else:        points = 5        result = "Tie"            # Converts user's move back into readable value    move = mrpsls_convert(move)    # Converts computer's move back into readable value    random_move = mrpsls_convert(random_move)        print(f"Modified RPSLS | Player: {move} | Computer: {random_move} | {result} | Points: {points}")            return points        def play_coin():    '''If the first flip is tails, user gets 2 points every time    they get heads until they get tails again. If the first flip is    head, user gets 1 point every time they get tails until they get    heads another two times.        Results of each coin flip and points are printed at the end.'''    tails = 0 # number of times coin flip is tails after 1st flip    heads = 0 # number of times coin flip is heads after 1st flip    points = 0    result = ""        # If the number is 0 it's heads. If it's 1, it's tails.    coin_side = random.randint(0,1)        # First flip is tails    if coin_side == 1:        # Result of the 1st coin flip        result += "T"        # Loops until the 2nd coin flip is tails        while tails < 1:            coin_side = random.randint(0,1)            if coin_side == 0:                points += 2                result += "H"            else:                result += "T"                tails += 1                # First flip is heads    elif coin_side == 0:        # Result of the 1st coin flip        result += "H"        # Loops until another two coin flips are heads        while heads < 2:            coin_side = random.randint(0,1)            if coin_side == 1:                points += 1                result += "T"            else:                result += "H"                heads += 1        # Output    print(f"Coin Flips | Results: {result} | Points: {points}")        return points### Main ###name = input("Enter your name: ")# Calculates user's points and runs the games_room functionpoints = games_room(name)# Outputs final scoreprint(f"\nFinal score: {points}")                    